fun main() {

    val womp = Student("womp","womperty")
//test code
    println(womp.fn)
    println(womp.ln)
    womp.fn = "wompert"
    println(womp.fn)
    val math = Classes(1,2,3,"420")
    println(math.finalDate)
    math.appendCourse("quiz","4/20")
    math.appendCourse("midterm1","4/22")
    println(math.courses)
    val spring = Semester("spring","5")
    println(spring.season)
    val list = "4/20/5/6/7"
    println(sanitize(list))
}
//used to get the date separated
fun sanitize(date:String):MutableList<Int>{
    val clean = date.split("/")
    return intchange(clean)
}
fun intchange(info:List<String>):MutableList<Int>{
    val tempList: MutableList<Int> = mutableListOf(info[0].toInt(),info[1].toInt())
    return tempList
}

class Classes(projectNumber_: Int,midtermNumber_:Int,quizzNumber_:Int,finalDate_:String){
    //variables
    //all dates get appended to the courses map

    val courses: MutableMap<String,String> = mutableMapOf("category" to "value")
    var projectNumber: Int = projectNumber_
    var midtermNumber: Int = midtermNumber_
    var quizzNumber: Int = quizzNumber_
    var finalDate: String = finalDate_
    //val projectDates = mutableListOf<String>()

    fun appendCourse(key:String,value:String){
        courses.put(key,value)
    }
    fun removeCourse(key:String,value:String){
        courses.remove(key)
    }
    fun addProject(project:String,date:String){
        courses.put(project,date)
    }
    fun quizzDate(quizz:String,date:String){
        courses.put(quizz,date)
    }

}
class Student(fn_:String,ln_:String){
    var fn = fn_
    var ln = ln_
    val courses = mutableListOf<Classes>()
    fun addCourse(course:Classes){
        courses.add(course)
    }

}
class Semester(season_:String,length_:String){
    var season:String = season_
    var length:String = length_
}
